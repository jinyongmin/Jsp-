/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2022-11-22 08:19:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.koreait.db.Dbconn;
import java.sql.*;

public final class info_005fok_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/./include/sessioncheck.jsp", Long.valueOf(1669091764656L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.koreait.db.Dbconn");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

		if(session.getAttribute("userid") == null){
		response.sendRedirect("/Day4/login.jsp");	
		return;
		}

      out.write("\r\n");
      out.write("    ");

    	Connection conn = null;
    	PreparedStatement pstmt = null;
    	ResultSet rs = null;
    	
    	request.setCharacterEncoding("UTF-8");
    	String userid = (String)session.getAttribute("userid");
    	String userpw = request.getParameter("userpw");
    	String name = request.getParameter("name");
    	String hp = request.getParameter("hp");
    	String email = request.getParameter("email");
    	
    	String hobby[] = request.getParameterValues("hobby");
    	String ssn1 = request.getParameter("ssn1");
    	String ssn2 = request.getParameter("ssn2");
    	String zipcode = request.getParameter("zipcode");
    	String address1 = request.getParameter("address1");
    	String address2 = request.getParameter("address2");
    	String address3 = request.getParameter("address3");
    	String gender = request.getParameter("gender");
    	String sql = "";
    	try{
    		conn = Dbconn.getConnection();
    		if(conn != null){
    			 sql = "select mem_idx from tb_member where mem_userid=? and mem_userpw=sha2(?, 256)";
    			 pstmt = conn.prepareStatement(sql);
    			 pstmt.setString(1, userid);
    			 pstmt.setString(2, userpw);
    			 rs = pstmt.executeQuery();
    			 if(rs.next()){
    				 sql = "update tb_member set mem_name=?, mem_hp=?, mem_email=?, mem_hobby=?, mem_ssn1=?, mem_ssn2=?, mem_zipcode=?, mem_address1=?, mem_address2=?, mem_address3=?, mem_gender=? where mem_userid=?";
    		    		pstmt = conn.prepareStatement(sql);
    		    		
    		    		pstmt.setString(1, name);
    		    		pstmt.setString(2, hp);
    		    		pstmt.setString(3, email);
    		    		String hobbystr = "";
    		    		for(int i=0;i<hobby.length;i++){
    		    			hobbystr = hobbystr + hobby[i] + " ";
    		    		}
    		    		pstmt.setString(4, hobbystr);
    		    		pstmt.setString(5, ssn1);
    		    		pstmt.setString(6, ssn2);
    		    		pstmt.setString(7, zipcode);
    		    		pstmt.setString(8, address1);
    		    		pstmt.setString(9, address2);
    		    		pstmt.setString(10, address3);
    		    		pstmt.setString(11, gender);
    		    		pstmt.setString(12, userid);
    		    		
    		    		pstmt.executeUpdate();
    		    		
      out.write("\r\n");
      out.write("    		    			<script>\r\n");
      out.write("    		    			alert('수정완료 되었습니다');\r\n");
      out.write("    						location.href=\"login.jsp\";	// refresh\r\n");
      out.write("    		    			</script>\r\n");
      out.write("    		    		");
  
    			}else{
    				
      out.write("\r\n");
      out.write("    				<script>\r\n");
      out.write("	    			alert('비밀번호를 확인하세요');\r\n");
      out.write("					history.back();	// refresh\r\n");
      out.write("	    			</script>\r\n");
      out.write("	    			");

    			}
    		// System.out.println("DB연결 성공!");
    		
    		}
    	}catch(Exception e){
    		e.printStackTrace();
    	}
    
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
